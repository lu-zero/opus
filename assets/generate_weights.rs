// Script to generate the weights from the codebooks
//
// TODO complete it so it runs stand-alone

const LSF_CODEBOOK_NB_MB: &[&[u16]] = &[
    &[ 0, 12,  35,  60,  83, 108, 132, 157, 180, 206, 228, 256 ],
    &[ 0, 15,  32,  55,  77, 101, 125, 151, 175, 201, 225, 256 ],
    &[ 0, 19,  42,  66,  89, 114, 137, 162, 184, 209, 230, 256 ],
    &[ 0, 12,  25,  50,  72,  97, 120, 147, 172, 200, 223, 256 ],
    &[ 0, 26,  44,  69,  90, 114, 135, 159, 180, 205, 225, 256 ],
    &[ 0, 13,  22,  53,  80, 106, 130, 156, 180, 205, 228, 256 ],
    &[ 0, 15,  25,  44,  64,  90, 115, 142, 168, 196, 222, 256 ],
    &[ 0, 19,  24,  62,  82, 100, 120, 145, 168, 190, 214, 256 ],
    &[ 0, 22,  31,  50,  79, 103, 120, 151, 170, 203, 227, 256 ],
    &[ 0, 21,  29,  45,  65, 106, 124, 150, 171, 196, 224, 256 ],
    &[ 0, 30,  49,  75,  97, 121, 142, 165, 186, 209, 229, 256 ],
    &[ 0, 19,  25,  52,  70,  93, 116, 143, 166, 192, 219, 256 ],
    &[ 0, 26,  34,  62,  75,  97, 118, 145, 167, 194, 217, 256 ],
    &[ 0, 25,  33,  56,  70,  91, 113, 143, 165, 196, 223, 256 ],
    &[ 0, 21,  34,  51,  72,  97, 117, 145, 171, 196, 222, 256 ],
    &[ 0, 20,  29,  50,  67,  90, 117, 144, 168, 197, 221, 256 ],
    &[ 0, 22,  31,  48,  66,  95, 117, 146, 168, 196, 222, 256 ],
    &[ 0, 24,  33,  51,  77, 116, 134, 158, 180, 200, 224, 256 ],
    &[ 0, 21,  28,  70,  87, 106, 124, 149, 170, 194, 217, 256 ],
    &[ 0, 26,  33,  53,  64,  83, 117, 152, 173, 204, 225, 256 ],
    &[ 0, 27,  34,  65,  95, 108, 129, 155, 174, 210, 225, 256 ],
    &[ 0, 20,  26,  72,  99, 113, 131, 154, 176, 200, 219, 256 ],
    &[ 0, 34,  43,  61,  78,  93, 114, 155, 177, 205, 229, 256 ],
    &[ 0, 23,  29,  54,  97, 124, 138, 163, 179, 209, 229, 256 ],
    &[ 0, 30,  38,  56,  89, 118, 129, 158, 178, 200, 231, 256 ],
    &[ 0, 21,  29,  49,  63,  85, 111, 142, 163, 193, 222, 256 ],
    &[ 0, 27,  48,  77, 103, 133, 158, 179, 196, 215, 232, 256 ],
    &[ 0, 29,  47,  74,  99, 124, 151, 176, 198, 220, 237, 256 ],
    &[ 0, 33,  42,  61,  76,  93, 121, 155, 174, 207, 225, 256 ],
    &[ 0, 29,  53,  87, 112, 136, 154, 170, 188, 208, 227, 256 ],
    &[ 0, 24,  30,  52,  84, 131, 150, 166, 186, 203, 229, 256 ],
    &[ 0, 37,  48,  64,  84, 104, 118, 156, 177, 201, 230, 256 ],
];

const LSF_CODEBOOK_WB: &[&[u16]] = &[
    &[ 0,  7,  23,  38,  54,  69,  85, 100, 116, 131, 147, 162, 178, 193, 208, 223, 239, 256 ],
    &[ 0, 13,  25,  41,  55,  69,  83,  98, 112, 127, 142, 157, 171, 187, 203, 220, 236, 256 ],
    &[ 0, 15,  21,  34,  51,  61,  78,  92, 106, 126, 136, 152, 167, 185, 205, 225, 240, 256 ],
    &[ 0, 10,  21,  36,  50,  63,  79,  95, 110, 126, 141, 157, 173, 189, 205, 221, 237, 256 ],
    &[ 0, 17,  20,  37,  51,  59,  78,  89, 107, 123, 134, 150, 164, 184, 205, 224, 240, 256 ],
    &[ 0, 10,  15,  32,  51,  67,  81,  96, 112, 129, 142, 158, 173, 189, 204, 220, 236, 256 ],
    &[ 0,  8,  21,  37,  51,  65,  79,  98, 113, 126, 138, 155, 168, 179, 192, 209, 218, 256 ],
    &[ 0, 12,  15,  34,  55,  63,  78,  87, 108, 118, 131, 148, 167, 185, 203, 219, 236, 256 ],
    &[ 0, 16,  19,  32,  36,  56,  79,  91, 108, 118, 136, 154, 171, 186, 204, 220, 237, 256 ],
    &[ 0, 11,  28,  43,  58,  74,  89, 105, 120, 135, 150, 165, 180, 196, 211, 226, 241, 256 ],
    &[ 0,  6,  16,  33,  46,  60,  75,  92, 107, 123, 137, 156, 169, 185, 199, 214, 225, 256 ],
    &[ 0, 11,  19,  30,  44,  57,  74,  89, 105, 121, 135, 152, 169, 186, 202, 218, 234, 256 ],
    &[ 0, 12,  19,  29,  46,  57,  71,  88, 100, 120, 132, 148, 165, 182, 199, 216, 233, 256 ],
    &[ 0, 17,  23,  35,  46,  56,  77,  92, 106, 123, 134, 152, 167, 185, 204, 222, 237, 256 ],
    &[ 0, 14,  17,  45,  53,  63,  75,  89, 107, 115, 132, 151, 171, 188, 206, 221, 240, 256 ],
    &[ 0,  9,  16,  29,  40,  56,  71,  88, 103, 119, 137, 154, 171, 189, 205, 222, 237, 256 ],
    &[ 0, 16,  19,  36,  48,  57,  76,  87, 105, 118, 132, 150, 167, 185, 202, 218, 236, 256 ],
    &[ 0, 12,  17,  29,  54,  71,  81,  94, 104, 126, 136, 149, 164, 182, 201, 221, 237, 256 ],
    &[ 0, 15,  28,  47,  62,  79,  97, 115, 129, 142, 155, 168, 180, 194, 208, 223, 238, 256 ],
    &[ 0,  8,  14,  30,  45,  62,  78,  94, 111, 127, 143, 159, 175, 192, 207, 223, 239, 256 ],
    &[ 0, 17,  30,  49,  62,  79,  92, 107, 119, 132, 145, 160, 174, 190, 204, 220, 235, 256 ],
    &[ 0, 14,  19,  36,  45,  61,  76,  91, 108, 121, 138, 154, 172, 189, 205, 222, 238, 256 ],
    &[ 0, 12,  18,  31,  45,  60,  76,  91, 107, 123, 138, 154, 171, 187, 204, 221, 236, 256 ],
    &[ 0, 13,  17,  31,  43,  53,  70,  83, 103, 114, 131, 149, 167, 185, 203, 220, 237, 256 ],
    &[ 0, 17,  22,  35,  42,  58,  78,  93, 110, 125, 139, 155, 170, 188, 206, 224, 240, 256 ],
    &[ 0,  8,  15,  34,  50,  67,  83,  99, 115, 131, 146, 162, 178, 193, 209, 224, 239, 256 ],
    &[ 0, 13,  16,  41,  66,  73,  86,  95, 111, 128, 137, 150, 163, 183, 206, 225, 241, 256 ],
    &[ 0, 17,  25,  37,  52,  63,  75,  92, 102, 119, 132, 144, 160, 175, 191, 212, 231, 256 ],
    &[ 0, 19,  31,  49,  65,  83, 100, 117, 133, 147, 161, 174, 187, 200, 213, 227, 242, 256 ],
    &[ 0, 18,  31,  52,  68,  88, 103, 117, 126, 138, 149, 163, 177, 192, 207, 223, 239, 256 ],
    &[ 0, 16,  29,  47,  61,  76,  90, 106, 119, 133, 147, 161, 176, 193, 209, 224, 240, 256 ],
    &[ 0, 15,  21,  35,  50,  61,  73,  86,  97, 110, 119, 129, 141, 175, 198, 218, 237, 256 ],
];

for codebook in codebooks {
        let w: Vec<u32> = codebook.windows(3).map(|code| {
            let prev = code[0] as u32;
            let cur  = code[1] as u32;
            let next = code[2] as u32;

            let weight = (1024 / (cur - prev) + 1024 / (next - cur)) << 16;
            let i = (weight as usize).ilog();
            let f = (weight >> (i - 8)) & 127;
            let y = (if i & 1 != 0 { 32768 } else { 46214 }) >> ((32 - i) >> 1);
            y + ((213 * f * y) >> 16)
        }).collect();

        println!("&{:?},", w);
    }
}
